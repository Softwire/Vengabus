// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly after data is added 1`] = `
.emotion-12 {
  width: calc(50% - 30px);
  margin-left: 15px;
  margin-right: 15px;
  display: inline-block;
}

.emotion-24 {
  display: block;
}

.emotion-2 {
  display: block;
  height: 35px;
  margin: 2px;
}

.emotion-25 {
  min-width: 1000px;
}

.emotion-13 {
  border-left: 1px solid black;
  display: inline-block;
  height: calc(100% - 100px);
  position: fixed;
  z-index: -1;
}

.emotion-0.breadcrumb {
  float: left;
  height: 35px;
  margin-bottom: 1px;
}

.emotion-10 {
  float: none;
  margin: 10px auto 20px auto;
}

.emotion-9 {
  float: none;
  margin: 10px auto 20px auto;
}

.emotion-9 {
  position: relative;
  font-size: 0;
  height: 50px;
  width: 50px;
}

.emotion-3 {
  width: 0;
  height: 0;
  border-right: 50px solid transparent;
  border-top: 50px solid transparent;
  border-left: 50px solid #333;
  border-bottom: 50px solid #333;
  border-radius: 50px;
  position: absolute;
  -webkit-animation: animation-1hqwhex 0.8s infinite ease-in-out;
  animation: animation-1hqwhex 0.8s infinite ease-in-out;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-4 {
  width: 0;
  height: 0;
  border-right: 50px solid transparent;
  border-top: 50px solid #333;
  border-left: 50px solid #333;
  border-bottom: 50px solid transparent;
  border-radius: 50px;
  position: absolute;
  -webkit-animation: animation-s4bjdm 0.8s infinite ease-in-out;
  animation: animation-s4bjdm 0.8s infinite ease-in-out;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-5 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 0.5s infinite linear;
  animation: animation-sdgt62 1s 0.5s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-6 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 0.75s infinite linear;
  animation: animation-sdgt62 1s 0.75s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-7 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 1s infinite linear;
  animation: animation-sdgt62 1s 1s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-8 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 1.25s infinite linear;
  animation: animation-sdgt62 1s 1.25s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

<TwoListDisplay>
  <div
    className="emotion-25"
  >
    <div
      className="emotion-2"
    >
      <Breadcrumb
        bsClass="breadcrumb"
        className="emotion-0"
      >
        <ol
          aria-label="breadcrumbs"
          className="emotion-0 breadcrumb"
          role="navigation"
        >
          <BreadcrumbItem
            active={true}
            id="Home"
            key="0"
            onClick={[Function]}
          >
            <li
              className="active"
            >
              <span
                id="Home"
                onClick={[Function]}
              >
                Home
              </span>
            </li>
          </BreadcrumbItem>
        </ol>
      </Breadcrumb>
    </div>
    <div
      className="emotion-24"
    >
      <div
        className="emotion-12"
        id="left"
      >
        <div>
          <h2
            id="title"
          >
            Queues
          </h2>
        </div>
        <QueueList
          clickFunction={[Function]}
          currentlySelectedName="Home"
          headerStyle={
            Object {
              "height": "92px",
              "minHeight": "92px",
            }
          }
          id="QueueTable"
        >
          <DataTable
            colProps={
              Array [
                Object {
                  "dataField": "name",
                  "headerStyle": Object {
                    "height": "92px",
                    "minHeight": "92px",
                  },
                  "search": true,
                  "width": 23,
                },
                Object {
                  "dataField": "activeMessageCount",
                  "formatter": [Function],
                  "headerStyle": Object {
                    "height": "92px",
                    "minHeight": "92px",
                  },
                  "text": "Active / Deadletter Message Counts",
                  "width": 46,
                },
                Object {
                  "dataField": "mostRecentDeadletter",
                  "width": 23,
                },
                Object {
                  "dataField": "",
                  "formatter": [Function],
                  "headerStyle": Object {
                    "height": "92px",
                    "minHeight": "92px",
                  },
                  "text": " ",
                  "width": 8,
                },
              ]
            }
            defaultHover={true}
            name="QueueList"
            onRowClick={[Function]}
            pagination={
              Object {
                "defaultPageSize": 25,
                "sizePerPageList": Array [
                  10,
                  25,
                  50,
                  100,
                ],
              }
            }
            searchable={true}
            selectRow={
              Object {
                "bgColor": "#99ccff",
                "selected": "Home",
              }
            }
            uniqueKeyColumn="name"
          >
            <FormGroup
              bsClass="form-group"
              controlId="searchBar"
            >
              <div
                className="form-group"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Search"
                  type="input"
                  value=""
                >
                  <input
                    className="form-control"
                    id="searchBar"
                    onChange={[Function]}
                    placeholder="Search"
                    type="input"
                    value=""
                  />
                </FormControl>
              </div>
            </FormGroup>
            <Spinner
              id="spinner"
              size={50}
            >
              <onlyUpdateForKeys(Loader)
                className="emotion-10"
                color="#333"
                loading={true}
                margin="2px"
                size={50}
                sizeUnit="px"
              >
                <Loader
                  className="emotion-10"
                  color="#333"
                  loading={true}
                  margin="2px"
                  size={50}
                  sizeUnit="px"
                >
                  <div
                    className="emotion-9"
                  >
                    <div
                      className="emotion-3"
                    />
                    <div
                      className="emotion-4"
                    />
                    <div
                      className="emotion-5"
                    />
                    <div
                      className="emotion-6"
                    />
                    <div
                      className="emotion-7"
                    />
                    <div
                      className="emotion-8"
                    />
                  </div>
                </Loader>
              </onlyUpdateForKeys(Loader)>
            </Spinner>
          </DataTable>
        </QueueList>
      </div>
      <div
        className="emotion-13"
      />
      <div
        className="emotion-12"
        id="right"
      >
        <div>
          <h2
            id="title"
          >
            Topics
          </h2>
        </div>
        <TopicList
          clickFunction={[Function]}
          headerStyle={
            Object {
              "height": "92px",
              "minHeight": "92px",
            }
          }
          id="TopicTable"
        >
          <DataTable
            colProps={
              Array [
                Object {
                  "dataField": "name",
                  "headerStyle": Object {
                    "height": "92px",
                    "minHeight": "92px",
                  },
                  "search": true,
                  "width": 31,
                },
                Object {
                  "align": "right",
                  "dataField": "subscriptionCount",
                  "headerStyle": Object {
                    "height": "92px",
                    "minHeight": "92px",
                  },
                  "width": 30,
                },
                Object {
                  "dataField": "topicStatus",
                  "text": "Status",
                  "width": 30,
                },
                Object {
                  "dataField": "",
                  "formatter": [Function],
                  "headerStyle": Object {
                    "height": "92px",
                    "minHeight": "92px",
                  },
                  "text": " ",
                  "width": 9,
                },
              ]
            }
            defaultHover={true}
            name="TopicList"
            onRowClick={[Function]}
            pagination={
              Object {
                "defaultPageSize": 25,
                "sizePerPageList": Array [
                  10,
                  25,
                  50,
                  100,
                ],
              }
            }
            searchable={true}
            selectRow={
              Object {
                "bgColor": "#99ccff",
                "selected": undefined,
              }
            }
            uniqueKeyColumn="name"
          >
            <FormGroup
              bsClass="form-group"
              controlId="searchBar"
            >
              <div
                className="form-group"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Search"
                  type="input"
                  value=""
                >
                  <input
                    className="form-control"
                    id="searchBar"
                    onChange={[Function]}
                    placeholder="Search"
                    type="input"
                    value=""
                  />
                </FormControl>
              </div>
            </FormGroup>
            <Spinner
              id="spinner"
              size={50}
            >
              <onlyUpdateForKeys(Loader)
                className="emotion-10"
                color="#333"
                loading={true}
                margin="2px"
                size={50}
                sizeUnit="px"
              >
                <Loader
                  className="emotion-10"
                  color="#333"
                  loading={true}
                  margin="2px"
                  size={50}
                  sizeUnit="px"
                >
                  <div
                    className="emotion-9"
                  >
                    <div
                      className="emotion-3"
                    />
                    <div
                      className="emotion-4"
                    />
                    <div
                      className="emotion-5"
                    />
                    <div
                      className="emotion-6"
                    />
                    <div
                      className="emotion-7"
                    />
                    <div
                      className="emotion-8"
                    />
                  </div>
                </Loader>
              </onlyUpdateForKeys(Loader)>
            </Spinner>
          </DataTable>
        </TopicList>
      </div>
    </div>
  </div>
</TwoListDisplay>
`;

exports[`renders correctly before data is added 1`] = `
.emotion-9 {
  width: calc(50% - 30px);
  margin-left: 15px;
  margin-right: 15px;
  display: inline-block;
}

.emotion-19 {
  display: block;
}

.emotion-1 {
  display: block;
  height: 35px;
  margin: 2px;
}

.emotion-20 {
  min-width: 1000px;
}

.emotion-10 {
  border-left: 1px solid black;
  display: inline-block;
  height: calc(100% - 100px);
  position: fixed;
  z-index: -1;
}

.emotion-0.breadcrumb {
  float: left;
  height: 35px;
  margin-bottom: 1px;
}

.emotion-8 {
  float: none;
  margin: 10px auto 20px auto;
}

.emotion-8 {
  position: relative;
  font-size: 0;
  height: 50px;
  width: 50px;
}

.emotion-2 {
  width: 0;
  height: 0;
  border-right: 50px solid transparent;
  border-top: 50px solid transparent;
  border-left: 50px solid #333;
  border-bottom: 50px solid #333;
  border-radius: 50px;
  position: absolute;
  -webkit-animation: animation-1hqwhex 0.8s infinite ease-in-out;
  animation: animation-1hqwhex 0.8s infinite ease-in-out;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-3 {
  width: 0;
  height: 0;
  border-right: 50px solid transparent;
  border-top: 50px solid #333;
  border-left: 50px solid #333;
  border-bottom: 50px solid transparent;
  border-radius: 50px;
  position: absolute;
  -webkit-animation: animation-s4bjdm 0.8s infinite ease-in-out;
  animation: animation-s4bjdm 0.8s infinite ease-in-out;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-4 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 0.5s infinite linear;
  animation: animation-sdgt62 1s 0.5s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-5 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 0.75s infinite linear;
  animation: animation-sdgt62 1s 0.75s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-6 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 1s infinite linear;
  animation: animation-sdgt62 1s 1s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.emotion-7 {
  width: 16.666666666666668px;
  height: 16.666666666666668px;
  background-color: #333;
  margin: 2px;
  border-radius: 100%;
  -webkit-transform: translate(0,-12.5px);
  -ms-transform: translate(0,-12.5px);
  transform: translate(0,-12.5px);
  position: absolute;
  top: 50px;
  left: 200px;
  -webkit-animation: animation-sdgt62 1s 1.25s infinite linear;
  animation: animation-sdgt62 1s 1.25s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

<div
  className="emotion-20"
>
  <div
    className="emotion-1"
  >
    <ol
      aria-label="breadcrumbs"
      className="emotion-0 breadcrumb"
      role="navigation"
    >
      <li
        className="active"
      >
        <span
          id="Home"
          onClick={[Function]}
        >
          Home
        </span>
      </li>
    </ol>
  </div>
  <div
    className="emotion-19"
  >
    <div
      className="emotion-9"
      id="left"
    >
      <div>
        <h2
          id="title"
        >
          Queues
        </h2>
      </div>
      <div
        className="form-group"
      >
        <input
          className="form-control"
          id="searchBar"
          onChange={[Function]}
          placeholder="Search"
          type="input"
          value=""
        />
      </div>
      <div
        className="emotion-8"
      >
        <div
          className="emotion-2"
        />
        <div
          className="emotion-3"
        />
        <div
          className="emotion-4"
        />
        <div
          className="emotion-5"
        />
        <div
          className="emotion-6"
        />
        <div
          className="emotion-7"
        />
      </div>
    </div>
    <div
      className="emotion-10"
    />
    <div
      className="emotion-9"
      id="right"
    >
      <div>
        <h2
          id="title"
        >
          Topics
        </h2>
      </div>
      <div
        className="form-group"
      >
        <input
          className="form-control"
          id="searchBar"
          onChange={[Function]}
          placeholder="Search"
          type="input"
          value=""
        />
      </div>
      <div
        className="emotion-8"
      >
        <div
          className="emotion-2"
        />
        <div
          className="emotion-3"
        />
        <div
          className="emotion-4"
        />
        <div
          className="emotion-5"
        />
        <div
          className="emotion-6"
        />
        <div
          className="emotion-7"
        />
      </div>
    </div>
  </div>
</div>
`;
