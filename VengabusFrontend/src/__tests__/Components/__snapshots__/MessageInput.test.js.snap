// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
.emotion-46 {
  margin-left: 5px;
  margin-right: 5px;
  padding-top: 1%;
  width: calc(100% - 10px);
  float: left;
}

.emotion-2 {
  float: left;
  width: 2%;
  position: relative;
  top: 9px;
}

.emotion-4 {
  float: left;
  width: 5%;
}

.emotion-16 {
  float: left;
  width: 92%;
}

.emotion-36 {
  width: 270px;
  margin-left: 5px;
}

.emotion-0 {
  font-weight: bold;
  margin-left: 5px;
}

.emotion-1 {
  text-align: left;
}

.emotion-44 {
  min-height: 350px;
  padding-left: 5px;
}

.emotion-6 {
  line-height: 38px;
}

.emotion-17 {
  float: left;
  width: 100%;
}

.emotion-37 {
  opacity: 0.5;
}

.emotion-37:hover {
  cursor: progress;
}

.emotion-15 {
  position: relative;
  box-sizing: border-box;
}

.emotion-14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,98%);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-14:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  color: hsl(0,0%,50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-8 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: #222;
  box-sizing: border-box;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-12 {
  color: hsl(0,0%,80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-12:hover {
  color: hsl(0,0%,60%);
}

.emotion-11 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

.emotion-31 {
  pointer-events: none;
  position: relative;
  box-sizing: border-box;
}

.emotion-30 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,95%);
  border-color: hsl(0,0%,90%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-30:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-26 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,90%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

<div
  className="emotion-46"
>
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Destination
    </p>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={true}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="queue"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Queue
        </p>
      </div>
    </div>
    <div
      className="emotion-15 emotion-16"
      id="queue-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-14"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-10"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={false}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="topic"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Topic
        </p>
      </div>
    </div>
    <div
      className="emotion-31 emotion-16"
      id="topic-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-30"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={true}
                id="react-select-3-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-26"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br />
  <br />
  <br />
  <br />
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Pre-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 emotion-37 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Loading pre-defined properties...
      </button>
    </div>
  </form>
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      User-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Add new application specific property
      </button>
    </div>
  </form>
  <hr />
  <form>
    <div
      className="emotion-1 form-group"
    >
      <label
        className="emotion-0 control-label"
        htmlFor="formControlsMessageBodyText"
      >
        Body
      </label>
      <textarea
        className="emotion-44 form-control"
        id="formControlsMessageBodyText"
        onChange={[Function]}
        placeholder="Enter message body"
        type={undefined}
        value=""
      />
    </div>
  </form>
  <form>
    <button
      className="btn btn-default"
      disabled={false}
      id="submitButton"
      onClick={[Function]}
      type="button"
    >
      Submit
    </button>
    <button
      className="btn btn-danger"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Reset Fields
    </button>
  </form>
</div>
`;

exports[`renders correctly 2`] = `
.emotion-46 {
  margin-left: 5px;
  margin-right: 5px;
  padding-top: 1%;
  width: calc(100% - 10px);
  float: left;
}

.emotion-2 {
  float: left;
  width: 2%;
  position: relative;
  top: 9px;
}

.emotion-4 {
  float: left;
  width: 5%;
}

.emotion-16 {
  float: left;
  width: 92%;
}

.emotion-36 {
  width: 270px;
  margin-left: 5px;
}

.emotion-0 {
  font-weight: bold;
  margin-left: 5px;
}

.emotion-1 {
  text-align: left;
}

.emotion-44 {
  min-height: 350px;
  padding-left: 5px;
}

.emotion-6 {
  line-height: 38px;
}

.emotion-17 {
  float: left;
  width: 100%;
}

.emotion-37 {
  opacity: 0.5;
}

.emotion-37:hover {
  cursor: progress;
}

.emotion-15 {
  position: relative;
  box-sizing: border-box;
}

.emotion-14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,98%);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-14:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  color: hsl(0,0%,50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-8 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: #222;
  box-sizing: border-box;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-12 {
  color: hsl(0,0%,80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-12:hover {
  color: hsl(0,0%,60%);
}

.emotion-11 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

.emotion-31 {
  pointer-events: none;
  position: relative;
  box-sizing: border-box;
}

.emotion-30 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,95%);
  border-color: hsl(0,0%,90%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-30:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-26 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,90%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

<div
  className="emotion-46"
>
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Destination
    </p>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={true}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="queue"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Queue
        </p>
      </div>
    </div>
    <div
      className="emotion-15 emotion-16"
      id="queue-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-14"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-8-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-10"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={false}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="topic"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Topic
        </p>
      </div>
    </div>
    <div
      className="emotion-31 emotion-16"
      id="topic-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-30"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={true}
                id="react-select-9-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-26"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br />
  <br />
  <br />
  <br />
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Pre-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 emotion-37 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Loading pre-defined properties...
      </button>
    </div>
  </form>
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      User-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Add new application specific property
      </button>
    </div>
  </form>
  <hr />
  <form>
    <div
      className="emotion-1 form-group"
    >
      <label
        className="emotion-0 control-label"
        htmlFor="formControlsMessageBodyText"
      >
        Body
      </label>
      <textarea
        className="emotion-44 form-control"
        id="formControlsMessageBodyText"
        onChange={[Function]}
        placeholder="Enter message body"
        type={undefined}
        value=""
      />
    </div>
  </form>
  <form>
    <button
      className="btn btn-default"
      disabled={false}
      id="submitButton"
      onClick={[Function]}
      type="button"
    >
      Submit
    </button>
    <button
      className="btn btn-danger"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Reset Fields
    </button>
  </form>
</div>
`;

exports[`renders correctly from a predefined message 1`] = `
.emotion-58 {
  margin-left: 5px;
  margin-right: 5px;
  padding-top: 1%;
  width: calc(100% - 10px);
  float: left;
}

.emotion-2 {
  float: left;
  width: 2%;
  position: relative;
  top: 9px;
}

.emotion-4 {
  float: left;
  width: 5%;
}

.emotion-16 {
  float: left;
  width: 92%;
}

.emotion-36 {
  width: 270px;
  margin-left: 5px;
}

.emotion-0 {
  font-weight: bold;
  margin-left: 5px;
}

.emotion-1 {
  text-align: left;
}

.emotion-56 {
  min-height: 350px;
  padding-left: 5px;
}

.emotion-6 {
  line-height: 38px;
}

.emotion-17 {
  float: left;
  width: 100%;
}

.emotion-37 {
  opacity: 0.5;
}

.emotion-37:hover {
  cursor: progress;
}

.emotion-15 {
  position: relative;
  box-sizing: border-box;
}

.emotion-14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,98%);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-14:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  color: hsl(0,0%,50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-8 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: #222;
  box-sizing: border-box;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-12 {
  color: hsl(0,0%,80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-12:hover {
  color: hsl(0,0%,60%);
}

.emotion-11 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

.emotion-31 {
  pointer-events: none;
  position: relative;
  box-sizing: border-box;
}

.emotion-30 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,95%);
  border-color: hsl(0,0%,90%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-30:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-26 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,90%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-42 {
  padding-left: 5px;
  width: 20%;
  float: left;
}

.emotion-44 {
  padding-left: 5px;
  width: calc(80% - 80px);
  float: left;
}

.emotion-46 {
  padding-left: 5px;
  width: 80px;
  float: left;
}

.emotion-41 {
  min-height: 38px;
}

<div
  className="emotion-58"
>
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Destination
    </p>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={true}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="queue"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Queue
        </p>
      </div>
    </div>
    <div
      className="emotion-15 emotion-16"
      id="queue-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-14"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-4-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-10"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={false}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="topic"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Topic
        </p>
      </div>
    </div>
    <div
      className="emotion-31 emotion-16"
      id="topic-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-30"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={true}
                id="react-select-5-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-26"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br />
  <br />
  <br />
  <br />
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Pre-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 emotion-37 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Loading pre-defined properties...
      </button>
    </div>
  </form>
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      User-defined Properties
    </p>
  </div>
  <div>
    <div>
      <form
        className="emotion-42"
        onSubmit={[Function]}
      >
        <div
          className="form-group"
        >
          <input
            className="emotion-41 form-control"
            id="formControlsText"
            onChange={[Function]}
            placeholder="Enter property name"
            type="text"
            value="userDefinedProp1"
          />
        </div>
      </form>
      <form
        className="emotion-44"
        onSubmit={[Function]}
      >
        <div
          className="form-group"
        >
          <input
            className="emotion-41 form-control"
            id="formControlsText"
            onChange={[Function]}
            placeholder="Enter property value"
            type="text"
            value="value1"
          />
        </div>
      </form>
      <div
        className="emotion-46"
      >
        <button
          className="emotion-41 btn btn-danger"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          Delete
        </button>
      </div>
    </div>
    <div>
      <form
        className="emotion-42"
        onSubmit={[Function]}
      >
        <div
          className="form-group"
        >
          <input
            className="emotion-41 form-control"
            id="formControlsText"
            onChange={[Function]}
            placeholder="Enter property name"
            type="text"
            value="userDefinedProp2"
          />
        </div>
      </form>
      <form
        className="emotion-44"
        onSubmit={[Function]}
      >
        <div
          className="form-group"
        >
          <input
            className="emotion-41 form-control"
            id="formControlsText"
            onChange={[Function]}
            placeholder="Enter property value"
            type="text"
            value="value2"
          />
        </div>
      </form>
      <div
        className="emotion-46"
      >
        <button
          className="emotion-41 btn btn-danger"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          Delete
        </button>
      </div>
    </div>
  </div>
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Add new application specific property
      </button>
    </div>
  </form>
  <hr />
  <form>
    <div
      className="emotion-1 form-group"
    >
      <label
        className="emotion-0 control-label"
        htmlFor="formControlsMessageBodyText"
      >
        Body
      </label>
      <textarea
        className="emotion-56 form-control"
        id="formControlsMessageBodyText"
        onChange={[Function]}
        placeholder="Enter message body"
        type={undefined}
        value="Hello world!"
      />
    </div>
  </form>
  <form>
    <button
      className="btn btn-default"
      disabled={false}
      id="submitButton"
      onClick={[Function]}
      type="button"
    >
      Submit
    </button>
    <button
      className="btn btn-danger"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Reset Fields
    </button>
  </form>
</div>
`;

exports[`renders correctly from a predefined message 2`] = `
.emotion-46 {
  margin-left: 5px;
  margin-right: 5px;
  padding-top: 1%;
  width: calc(100% - 10px);
  float: left;
}

.emotion-2 {
  float: left;
  width: 2%;
  position: relative;
  top: 9px;
}

.emotion-4 {
  float: left;
  width: 5%;
}

.emotion-16 {
  float: left;
  width: 92%;
}

.emotion-36 {
  width: 270px;
  margin-left: 5px;
}

.emotion-0 {
  font-weight: bold;
  margin-left: 5px;
}

.emotion-1 {
  text-align: left;
}

.emotion-44 {
  min-height: 350px;
  padding-left: 5px;
}

.emotion-6 {
  line-height: 38px;
}

.emotion-17 {
  float: left;
  width: 100%;
}

.emotion-37 {
  opacity: 0.5;
}

.emotion-37:hover {
  cursor: progress;
}

.emotion-15 {
  position: relative;
  box-sizing: border-box;
}

.emotion-14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,98%);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-14:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 2px 8px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  color: hsl(0,0%,50%);
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-8 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: #222;
  box-sizing: border-box;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,80%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

.emotion-12 {
  color: hsl(0,0%,80%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  box-sizing: border-box;
}

.emotion-12:hover {
  color: hsl(0,0%,60%);
}

.emotion-11 {
  display: inline-block;
  fill: currentColor;
  line-height: 1;
  stroke: currentColor;
  stroke-width: 0;
}

.emotion-31 {
  pointer-events: none;
  position: relative;
  box-sizing: border-box;
}

.emotion-30 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,95%);
  border-color: hsl(0,0%,90%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: 0 !important;
  position: relative;
  -webkit-transition: all 100ms;
  transition: all 100ms;
  box-sizing: border-box;
}

.emotion-30:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-26 {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  background-color: hsl(0,0%,90%);
  margin-bottom: 8px;
  margin-top: 8px;
  width: 1px;
  box-sizing: border-box;
}

<div
  className="emotion-46"
>
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Destination
    </p>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={true}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="queue"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Queue
        </p>
      </div>
    </div>
    <div
      className="emotion-15 emotion-16"
      id="queue-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-14"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-10-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-10"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="emotion-17"
  >
    <div
      onClick={[Function]}
    >
      <input
        checked={false}
        className="emotion-2"
        onChange={[Function]}
        type="radio"
        value="topic"
      />
      <div
        className="emotion-1 emotion-4 emotion-0 emotion-6"
      >
        <p>
          Topic
        </p>
      </div>
    </div>
    <div
      className="emotion-31 emotion-16"
      id="topic-dropdown"
      onKeyDown={[Function]}
    >
      <div
        className="emotion-30"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="emotion-9"
        >
          <div
            className="emotion-7"
          >
            Select...
          </div>
          <div
            className="emotion-8"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={true}
                id="react-select-11-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="emotion-13"
        >
          <span
            className="emotion-26"
          />
          <div
            aria-hidden="true"
            className="emotion-12"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="emotion-11"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br />
  <br />
  <br />
  <br />
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      Pre-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 emotion-37 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Loading pre-defined properties...
      </button>
    </div>
  </form>
  <hr />
  <div
    className="emotion-1"
  >
    <p
      className="emotion-0"
    >
      User-defined Properties
    </p>
  </div>
  <div />
  <form>
    <div
      className="emotion-1"
    >
      <button
        className="emotion-36 btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Add new application specific property
      </button>
    </div>
  </form>
  <hr />
  <form>
    <div
      className="emotion-1 form-group"
    >
      <label
        className="emotion-0 control-label"
        htmlFor="formControlsMessageBodyText"
      >
        Body
      </label>
      <textarea
        className="emotion-44 form-control"
        id="formControlsMessageBodyText"
        onChange={[Function]}
        placeholder="Enter message body"
        type={undefined}
        value=""
      />
    </div>
  </form>
  <form>
    <button
      className="btn btn-default"
      disabled={false}
      id="submitButton"
      onClick={[Function]}
      type="button"
    >
      Submit
    </button>
    <button
      className="btn btn-danger"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Reset Fields
    </button>
  </form>
</div>
`;
